# Builds community-ansible-dev-tools-container-base image which provides
# container-in-container support and all installs all binary dependencies
FROM quay.io/fedora/fedora-minimal:39

LABEL org.opencontainers.image.source https://github.com/ansible-community/community-ansible-dev-tools-container/blob/main/base/ContainerFile
LABEL org.opencontainers.image.authors "Ansible DevTools"
LABEL org.opencontainers.image.vendor "Red Hat"
LABEL org.opencontainers.image.licenses "GPL-3.0"

RUN microdnf -y update
RUN microdnf -y install shadow-utils
RUN rpm --setcaps shadow-utils 2>/dev/null
RUN microdnf -y install python3-devel echo podman fuse-overlayfs openssh-clients zsh util-linux-user which git --exclude container-selinux

RUN useradd podman; \
        echo -e "podman:1:999\npodman:1001:64535" > /etc/subuid; \
        echo -e "podman:1:999\npodman:1001:64535" > /etc/subgid;

ARG _REPO_URL="https://raw.githubusercontent.com/containers/image_build/main/podman/stable"
ADD $_REPO_URL/containers.conf /etc/containers/containers.conf
ADD $_REPO_URL/podman-containers.conf /home/podman/.config/containers/containers.conf

RUN mkdir -p /home/podman/.local/share/containers && \
        chown podman:podman -R /home/podman && \
        chmod 644 /etc/containers/containers.conf

# Copy & modify the defaults to provide reference if runtime changes needed.
# Changes here are required for running with fuse-overlay storage inside container.
RUN sed -e 's|^#mount_program|mount_program|g' \
              -e '/additionalimage.*/a "/var/lib/shared",' \
              -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,fsync=0"|g' \
              /usr/share/containers/storage.conf \
              > /etc/containers/storage.conf

# Note VOLUME options must always happen after the chown call above
# RUN commands can not modify existing volumes
VOLUME /var/lib/containers
VOLUME /home/podman/.local/share/containers

RUN mkdir -p /var/lib/shared/overlay-images \
                /var/lib/shared/overlay-layers \
                /var/lib/shared/vfs-images \
                /var/lib/shared/vfs-layers && \
        touch /var/lib/shared/overlay-images/images.lock && \
        touch /var/lib/shared/overlay-layers/layers.lock && \
        touch /var/lib/shared/vfs-images/images.lock && \
        touch /var/lib/shared/vfs-layers/layers.lock

ENV _CONTAINERS_USERNS_CONFIGURED=""

# base developer environment setup

# install adt specific binary dependencies
RUN \
microdnf install -y \
dumb-init \
# ansible-pylibssh needs:
gcc \
git-core \
libssh-devel \
python3-markupsafe \
# ansible-navigator needs:
oniguruma-devel \
python3-bcrypt \
python3-cffi \
python3-pip \
# TO-DO: Do we need this?
python3-pynacl \
# TO-DO: Do we need this?
python3-pyrsistent \
python3-pyyaml \
python3-ruamel-yaml \
python3-wheel \
    && microdnf clean all

RUN \
mkdir -p ~/.ansible/roles /usr/share/ansible/roles /etc/ansible/roles && \
git config --system --add safe.directory /

# use zsh+oh-my-zsh
RUN chsh -s $(which zsh) podman

USER podman
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# Related to https://github.com/ohmyzsh/ohmyzsh/issues/6835
RUN \
chmod 755 /home/podman/.oh-my-zsh && \
chmod 755 /home/podman/.oh-my-zsh/cache

COPY ./requirements.txt requirements.txt
RUN python3 -m pip install -r requirements.txt
