---
name: publish

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  REGISTRY: ghcr.io
  NAMESPACE: ansible
  FINAL_IMAGE: community-ansible-dev-tools-container

jobs:
  build:
    runs-on: ${{ matrix.builder }}
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    strategy:
      fail-fast: false
      matrix:
        include:
          - builder: devtools-multiarch-builder
            platform: linux/amd64
          - builder: devtools-arm64-runner
            platform: linux/arm64

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FINAL_IMAGE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # network=host driver-opt needed to push to local registry
          driver-opts: network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install ansible-builder
        id: ansible-builder-install
        run: |
          python3 -m pip install ansible-builder

      - name: Verify ansible-builder installed
        id: ansible-builder-verify
        run: |
          ansible-builder --version

      - name: Build base image for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        id: build_base
        with:
          context: base
          provenance: false
          file: base/Containerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: localhost:5000/${{ env.FINAL_IMAGE }}-base:latest
          cache-from: type=gha,scope=build-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,scope=build-${{ env.PLATFORM_PAIR }}

      - name: Show available images & base image manifest
        run: |
          curl -X GET http://localhost:5000/v2/${{ env.FINAL_IMAGE }}-base/tags/list
          docker manifest inspect localhost:5000/${{ env.FINAL_IMAGE }}-base --insecure -v

      - name: Create a build context and ContainerFile for the final image
        run: |
          ansible-builder create -f ${{ github.workspace }}/execution-environment.yml -v3

      - name: Build and push final image by digest for ${{ matrix.platform }}
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/context
          provenance: false
          file: ${{ github.workspace }}/context/Containerfile
          build-contexts: |
            ${{ env.FINAL_IMAGE }}-base=docker-image://localhost:5000/${{ env.FINAL_IMAGE }}-base:latest
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.FINAL_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=build-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,scope=build-${{ env.PLATFORM_PAIR }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.FINAL_IMAGE }}
          labels: |
            org.opencontainers.image.description=A community container image for Ansible Devtools.
          tags: |
            type=schedule,pattern=latest
            type=ref,event=tag
            type=ref,event=tag,pattern=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.FINAL_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.FINAL_IMAGE }}:latest
